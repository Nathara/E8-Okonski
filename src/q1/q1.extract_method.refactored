package q1.extract_method.refactored;

import java.util.List;

public class A {
   Node m1(List<Node> nodes, String p) {
      extractedMethod(nodes, p);
      return null;
   }

   Edge m2(List<Edge> edgeList, String p) {
	   extractedMethod(edgeList, p);
      return null;
   }

<C extends B> void extractedMethod(List<C> lists, String p) {
	for (C list : lists) {
		if (list.contains(p)) {
			System.out.println(list);
		}
	}
}
}
class B{
	String name;
	public boolean contains(String p) {
		return name.contains(p);
	}
}

class Node extends B {
   String name;

   public boolean contains(String p) {
      return name.contains(p);
   }
}

class Edge extends B {
   String name;

   public boolean contains(String p) {
       return name.contains(p);
   }
}
